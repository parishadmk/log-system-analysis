// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: log_ingest.proto

package ingest

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LogRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ApiKey        string                 `protobuf:"bytes,2,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
	Payload       *LogPayload            `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogRequest) Reset() {
	*x = LogRequest{}
	mi := &file_log_ingest_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogRequest) ProtoMessage() {}

func (x *LogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_log_ingest_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogRequest.ProtoReflect.Descriptor instead.
func (*LogRequest) Descriptor() ([]byte, []int) {
	return file_log_ingest_proto_rawDescGZIP(), []int{0}
}

func (x *LogRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *LogRequest) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

func (x *LogRequest) GetPayload() *LogPayload {
	if x != nil {
		return x.Payload
	}
	return nil
}

type LogPayload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Timestamp     int64                  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // Unix nanos
	Data          map[string]string      `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogPayload) Reset() {
	*x = LogPayload{}
	mi := &file_log_ingest_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogPayload) ProtoMessage() {}

func (x *LogPayload) ProtoReflect() protoreflect.Message {
	mi := &file_log_ingest_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogPayload.ProtoReflect.Descriptor instead.
func (*LogPayload) Descriptor() ([]byte, []int) {
	return file_log_ingest_proto_rawDescGZIP(), []int{1}
}

func (x *LogPayload) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LogPayload) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *LogPayload) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

type LogResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Accepted      bool                   `protobuf:"varint,1,opt,name=accepted,proto3" json:"accepted,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogResponse) Reset() {
	*x = LogResponse{}
	mi := &file_log_ingest_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogResponse) ProtoMessage() {}

func (x *LogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_log_ingest_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogResponse.ProtoReflect.Descriptor instead.
func (*LogResponse) Descriptor() ([]byte, []int) {
	return file_log_ingest_proto_rawDescGZIP(), []int{2}
}

func (x *LogResponse) GetAccepted() bool {
	if x != nil {
		return x.Accepted
	}
	return false
}

var File_log_ingest_proto protoreflect.FileDescriptor

const file_log_ingest_proto_rawDesc = "" +
	"\n" +
	"\x10log_ingest.proto\x12\x06ingest\"r\n" +
	"\n" +
	"LogRequest\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\x12\x17\n" +
	"\aapi_key\x18\x02 \x01(\tR\x06apiKey\x12,\n" +
	"\apayload\x18\x03 \x01(\v2\x12.ingest.LogPayloadR\apayload\"\xa9\x01\n" +
	"\n" +
	"LogPayload\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1c\n" +
	"\ttimestamp\x18\x02 \x01(\x03R\ttimestamp\x120\n" +
	"\x04data\x18\x03 \x03(\v2\x1c.ingest.LogPayload.DataEntryR\x04data\x1a7\n" +
	"\tDataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\")\n" +
	"\vLogResponse\x12\x1a\n" +
	"\baccepted\x18\x01 \x01(\bR\baccepted2C\n" +
	"\rIngestService\x122\n" +
	"\aSendLog\x12\x12.ingest.LogRequest\x1a\x13.ingest.LogResponseB?Z=github.com/parishadmk/log-system-analysis/internal/api/ingestb\x06proto3"

var (
	file_log_ingest_proto_rawDescOnce sync.Once
	file_log_ingest_proto_rawDescData []byte
)

func file_log_ingest_proto_rawDescGZIP() []byte {
	file_log_ingest_proto_rawDescOnce.Do(func() {
		file_log_ingest_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_log_ingest_proto_rawDesc), len(file_log_ingest_proto_rawDesc)))
	})
	return file_log_ingest_proto_rawDescData
}

var file_log_ingest_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_log_ingest_proto_goTypes = []any{
	(*LogRequest)(nil),  // 0: ingest.LogRequest
	(*LogPayload)(nil),  // 1: ingest.LogPayload
	(*LogResponse)(nil), // 2: ingest.LogResponse
	nil,                 // 3: ingest.LogPayload.DataEntry
}
var file_log_ingest_proto_depIdxs = []int32{
	1, // 0: ingest.LogRequest.payload:type_name -> ingest.LogPayload
	3, // 1: ingest.LogPayload.data:type_name -> ingest.LogPayload.DataEntry
	0, // 2: ingest.IngestService.SendLog:input_type -> ingest.LogRequest
	2, // 3: ingest.IngestService.SendLog:output_type -> ingest.LogResponse
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_log_ingest_proto_init() }
func file_log_ingest_proto_init() {
	if File_log_ingest_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_log_ingest_proto_rawDesc), len(file_log_ingest_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_log_ingest_proto_goTypes,
		DependencyIndexes: file_log_ingest_proto_depIdxs,
		MessageInfos:      file_log_ingest_proto_msgTypes,
	}.Build()
	File_log_ingest_proto = out.File
	file_log_ingest_proto_goTypes = nil
	file_log_ingest_proto_depIdxs = nil
}
